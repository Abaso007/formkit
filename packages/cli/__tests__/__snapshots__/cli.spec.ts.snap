// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`buildTheme > can generate a local theme 1`] = `
"import type { FormKitNode } from '@formkit/core'

/**
  * @privateRemarks
  * This file was generated by the FormKit CLI and should not be manually
  * edited unless you’d like to \\"eject\\" from the CLI’s ability to update it.
  *
  * @checksum - a7bfb1d9f983e29f818f08018282b0c2013b3e012133512c2d0559469f51a5a7
  * @variables - undefined
  **/

 /**
  * This is the theme function itself, it should be imported and used as the
  * config.rootClasses function. For example:
  *
  * \`\`\`js
  * import { theme } from './formkit.theme'
  * import { defineFormKitConfig } from '@formkit/vue'
  *
  * export default defineFormKitConfig({
  *   config: {
  *     rootClasses: theme
  *   }
  * })
  * \`\`\`
  **/
 export function rootClasses (sectionName: string, node: FormKitNode): Record<string, boolean> {
   const key = \`\${node.props.type}__\${sectionName}\`
   const familyKey = node.props.family ? \`family:\${node.props.family}__\${sectionName}\` : ''
   const memoKey = \`\${key}__\${familyKey}\`
   if (!(memoKey in classes)) {
     const sectionClasses = classes[key] ?? globals[sectionName] ?? {}
     if (familyKey in classes) {
       classes[memoKey] = { ...classes[familyKey],  ...sectionClasses }
     } else {
       classes[memoKey] = sectionClasses
     }
   }
   return classes[memoKey]
 }

/**
 * These classes have already been merged with globals using tailwind-merge
 * and are ready to be used directly in the theme.
 **/
const classes: Record<string, Record<string, boolean>> = {
  \\"family:text__outer\\": {
    \\"mb-64\\": true,
    \\"mt-2\\": true,
    \\"ml-80\\": true,
    \\"mr-10\\": true,
    \\"border-green-300\\": true,
    \\"text-green-300\\": true
  },
  \\"text__input\\": {
    \\"border-2\\": true,
    \\"rounded-md\\": true,
    \\"p-2\\": true,
    \\"border-slate-50\\": true
  },
  \\"select__inner\\": {
    \\"border-2\\": true,
    \\"rounded-md\\": true,
    \\"p-4\\": true
  },
  \\"select__outer\\": {
    \\"mt-2\\": true,
    \\"ml-80\\": true,
    \\"mr-10\\": true,
    \\"border-green-300\\": true,
    \\"mb-56\\": true
  }
};

/**
 * Globals are merged prior to generating this file — these are included for
 * any other non-matching inputs.
 **/
const globals: Record<string, Record<string, boolean>> = {
  \\"outer\\": {
    \\"mb-64\\": true,
    \\"mt-2\\": true,
    \\"ml-80\\": true,
    \\"mr-10\\": true,
    \\"border-green-300\\": true
  }
};
"
`;

exports[`buildTheme > can override variables in generated theme 1`] = `
"import type { FormKitNode } from '@formkit/core'

/**
  * @privateRemarks
  * This file was generated by the FormKit CLI and should not be manually
  * edited unless you’d like to \\"eject\\" from the CLI’s ability to update it.
  *
  * @checksum - 7fe919c13597b626caee472d5179e83221a54e6a8643d8b0073c5bbad94a70e2
  * @variables - border=border-6,spacing=10
  **/

 /**
  * This is the theme function itself, it should be imported and used as the
  * config.rootClasses function. For example:
  *
  * \`\`\`js
  * import { theme } from './formkit.theme'
  * import { defineFormKitConfig } from '@formkit/vue'
  *
  * export default defineFormKitConfig({
  *   config: {
  *     rootClasses: theme
  *   }
  * })
  * \`\`\`
  **/
 export function rootClasses (sectionName: string, node: FormKitNode): Record<string, boolean> {
   const key = \`\${node.props.type}__\${sectionName}\`
   const familyKey = node.props.family ? \`family:\${node.props.family}__\${sectionName}\` : ''
   const memoKey = \`\${key}__\${familyKey}\`
   if (!(memoKey in classes)) {
     const sectionClasses = classes[key] ?? globals[sectionName] ?? {}
     if (familyKey in classes) {
       classes[memoKey] = { ...classes[familyKey],  ...sectionClasses }
     } else {
       classes[memoKey] = sectionClasses
     }
   }
   return classes[memoKey]
 }

/**
 * These classes have already been merged with globals using tailwind-merge
 * and are ready to be used directly in the theme.
 **/
const classes: Record<string, Record<string, boolean>> = {
  \\"family:text__outer\\": {
    \\"mb-10\\": true,
    \\"mt-2\\": true,
    \\"ml-80\\": true,
    \\"mr-10\\": true,
    \\"border-green-300\\": true,
    \\"text-green-300\\": true
  },
  \\"text__input\\": {
    \\"border-6\\": true,
    \\"rounded-md\\": true,
    \\"p-2\\": true,
    \\"border-slate-50\\": true
  },
  \\"select__inner\\": {
    \\"border-6\\": true,
    \\"rounded-md\\": true,
    \\"p-4\\": true
  },
  \\"select__outer\\": {
    \\"mt-2\\": true,
    \\"ml-80\\": true,
    \\"mr-10\\": true,
    \\"border-green-300\\": true,
    \\"mb-8\\": true
  }
};

/**
 * Globals are merged prior to generating this file — these are included for
 * any other non-matching inputs.
 **/
const globals: Record<string, Record<string, boolean>> = {
  \\"outer\\": {
    \\"mb-10\\": true,
    \\"mt-2\\": true,
    \\"ml-80\\": true,
    \\"mr-10\\": true,
    \\"border-green-300\\": true
  }
};
"
`;
